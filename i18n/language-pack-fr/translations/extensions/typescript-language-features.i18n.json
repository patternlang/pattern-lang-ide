{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Fonctionnalités de langage TypeScript et JavaScript",
			"description": "Fournit une prise en charge riche de langage pour JavaScript et TypeScript.",
			"reloadProjects.title": "Recharger le projet",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Fonctions complètes avec leur signature de paramètre.",
			"typescript.tsdk.desc": "Spécifie le chemin de dossier contenant les fichiers tsserver et lib*.d.ts à utiliser.",
			"typescript.disableAutomaticTypeAcquisition": "Désactive l'acquisition de type automatique. L'acquisition de type automatique récupère les packages '@types' de npm afin d'améliorer IntelliSense pour les bibliothèques externes.",
			"typescript.tsserver.log": "Active la journalisation du serveur TS dans un fichier. Ce journal peut être utilisé pour diagnostiquer les problèmes du serveur TS. Il peut contenir des chemins de fichier, du code source et d'autres informations potentiellement sensibles de votre projet.",
			"typescript.tsserver.pluginPaths": "Chemins supplémentaires pour découvrir les plug-ins Service de langage Typescript. Nécessite l'utilisation de TypeScript 2.3.0 ou d'une version plus récente dans l'espace de travail.",
			"typescript.tsserver.pluginPaths.item": "Un chemin absolu ou un chemin relatif. Le chemin d’accès relatif sera résolu en fonction des dossiers de l’espace de travail.",
			"typescript.tsserver.trace": "Active le traçage des messages envoyés au serveur TS. Cette trace peut être utilisée pour diagnostiquer les problèmes du serveur TS. Elle peut contenir des chemins de fichier, du code source et d'autres informations potentiellement sensibles de votre projet.",
			"typescript.validate.enable": "Activez/désactivez la validation TypeScript.",
			"typescript.format.enable": "Activez/désactivez le formateur TypeScript par défaut.",
			"javascript.format.enable": "Activez/désactivez le formateur JavaScript par défaut.",
			"format.insertSpaceAfterCommaDelimiter": "Définit le traitement des espaces après une virgule de délimitation.",
			"format.insertSpaceAfterConstructor": "Définit le traitement des espaces après le mot clé constructor. Nécessite l'utilisation de Typescript 2.3.0 ou d'une version plus récente dans l'espace de travail.",
			"format.insertSpaceAfterSemicolonInForStatements": " Définit le traitement des espaces après un point-virgule dans une instruction for.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Définit le traitement des espaces après un opérateur binaire.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Définit la gestion des espaces après les mots clés dans une instruction de flux de contrôle.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Définit le traitement des espaces après le mot clé function pour les fonctions anonymes.",
			"format.insertSpaceBeforeFunctionParenthesis": "Définit le traitement des espaces avant les parenthèses d'arguments de la fonction.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Définit l’espace après ouverture et avant la fermeture de parenthèses non vides.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Définit l’espace après ouverture et avant la fermeture de crochets non vides.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades non vides. Nécessite l'utilisation de Typescript 2.3.0 ou d'une version plus récente dans l'espace de travail.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades de chaîne de modèle.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades d'expression JSX.",
			"format.insertSpaceAfterTypeAssertion": "Définit le traitement des espaces après les assertions de type dans TypeScript. Nécessite l'utilisation de TypeScript 2.4 ou d'une version plus récente dans l'espace de travail.",
			"format.placeOpenBraceOnNewLineForFunctions": "Définit si une accolade ouvrante dans une fonction est placée ou non sur une nouvelle ligne.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Définit si une accolade ouvrante dans un bloc de contrôle est placée ou non sur une nouvelle ligne.",
			"javascript.validate.enable": "Activez/désactivez la validation JavaScript.",
			"goToProjectConfig.title": "Accéder à la configuration du projet",
			"javascript.referencesCodeLens.enabled": "Activez/désactivez les références CodeLens dans les fichiers JavaScript.",
			"typescript.referencesCodeLens.enabled": "Activez/désactivez les références CodeLens dans les fichiers TypeScript.",
			"typescript.implementationsCodeLens.enabled": "Activer/désactiver les implémentations CodeLens. Ce CodeLens affiche l'implémenteur d’une interface.",
			"typescript.openTsServerLog.title": "Ouvrir le journal du serveur TS",
			"typescript.restartTsServer": "Redémarrer le serveur TS",
			"typescript.selectTypeScriptVersion.title": "Sélectionner la version de TypeScript...",
			"typescript.reportStyleChecksAsWarnings": "Rapporter les vérifications de style en tant qu’avertissements.",
			"javascript.implicitProjectConfig.checkJs": "Activez/désactivez la vérification sémantique des fichiers JavaScript. Les fichiers jsconfig.json ou tsconfig.json existants remplacent ce paramètre. Nécessite l'utilisation de TypeScript 2.3.1 ou d'une version plus récente dans l'espace de travail.",
			"typescript.npm": "Spécifie le chemin de l'exécutable NPM utilisé pour l'acquisition de type automatique. Nécessite l'utilisation de TypeScript 2.3.4 ou d'une version plus récente dans l'espace de travail.",
			"typescript.check.npmIsInstalled": "Vérifie si NPM est installé pour l'acquisition de type automatique.",
			"configuration.suggest.names": "Activer/désactiver en incluant des noms uniques à partir du fichier dans les suggestions JavaScript.",
			"typescript.tsc.autoDetect": "Contrôle la détection automatique des tâches tsc.",
			"typescript.tsc.autoDetect.off": "Désactivez cette fonctionnalité.",
			"typescript.tsc.autoDetect.on": "Créer les tâches build et watch.",
			"typescript.tsc.autoDetect.build": "Créer uniquement des tâches de compilation à exécution unique.",
			"typescript.tsc.autoDetect.watch": "Créer uniquement des tâches compile et watch.",
			"typescript.problemMatchers.tsc.label": "Problèmes liés à TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problèmes liés à TypeScript (mode espion)",
			"configuration.suggest.paths": "Activer/désactiver des suggestions pour les chemins dans les instructions d'import et les appels require.",
			"typescript.locale": "Définit les paramètres régionaux utilisé pour signaler les erreurs JavaScript et TypeScript. Nécessite l’utilisation deTypeScript 2.6.0 ou plus récent dans l’espace de travail. La valeur par défaut `null` utilise les paramètres régionaux de VS Code.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Activer/désactiver `experimentalDecorator` des fichiers JavaScript qui ne font pas partie d’un projet. Les fichiers existants jsconfig.json ou tsconfig.json remplacent ce paramètre. Nécessite l’utilisation de TypeScript 2.3.1 ou plus récent dans l’espace de travail.",
			"configuration.suggest.autoImports": "Activez/désactivez l'importation automatique des suggestions. Nécessite l'utilisation de TypeScript 2.6.1 ou d'une version plus récente dans l'espace de travail.",
			"taskDefinition.tsconfig.description": "Fichier tsconfig qui définit la build TS.",
			"javascript.suggestionActions.enabled": "Activez/désactivez les diagnostics de suggestion pour les fichiers JavaScript dans l'éditeur. Nécessite l'utilisation de TypeScript 2.8 ou d'une version plus récente dans l'espace de travail.",
			"typescript.suggestionActions.enabled": "Activez/désactivez les diagnostics de suggestion pour les fichiers TypeScript dans l'éditeur. Nécessite l'utilisation de TypeScript 2.8 ou d'une version plus récente dans l'espace de travail.",
			"typescript.preferences.quoteStyle": "Style de guillemet par défaut à utiliser pour les corrections rapides : 'single' pour les guillemets simples, 'double' pour les guillemets doubles ou 'auto' pour déduire le type de guillemet à partir des importations existantes. Nécessite l'utilisation de TypeScript 2.9 ou d'une version plus récente dans l'espace de travail.",
			"typescript.preferences.importModuleSpecifier": "Style de chemin préféré pour les importations automatiques.",
			"typescript.preferences.importModuleSpecifier.auto": "Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.",
			"typescript.preferences.importModuleSpecifier.relative": "Relatif à l’emplacement du fichier.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Basé sur le `baseUrl` configuré dans votre `jsconfig.json` / `tsconfig.json`.",
			"typescript.updateImportsOnFileMove.enabled": "Activer/désactiver la mise à jour automatique des chemins d’importation quand vous renommez ou déplacez un fichier dans VS Code. Nécessite l’utilisation de TypeScript 2.9 ou plus récent dans l’espace de travail.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Demander à chaque renommage.",
			"typescript.updateImportsOnFileMove.enabled.always": "Toujours mettre à jour les chemins automatiquement.",
			"typescript.updateImportsOnFileMove.enabled.never": "Ne jamais renommer les chemins et ne pas demander.",
			"typescript.autoClosingTags": "Activer/désactiver la fermeture automatique des balises JSX. Nécessite l’utilisation de TypeScript 3.0 ou plus récent dans l’espace de travail.",
			"typescript.suggest.enabled": "Activer/désactiver les suggestions d'autocomplétion.",
			"configuration.surveys.enabled": "Activer/désactiver des enquêtes ponctuelles qui nous aident à améliorer le support JavaScript et TypeScript de VS Code.",
			"configuration.suggest.completeJSDocs": "Activez/désactivez la suggestion pour commenter JSDoc.",
			"typescript.preferences.renameShorthandProperties": "Activez/désactivez l'introduction d'alias pour les propriétés raccourcies d'objet pendant les renommages. Nécessite l'utilisation de TypeScript 3.4 ou version ultérieure dans l'espace de travail."
		},
		"out/utils/versionStatus": {
			"typescriptVersion": "TypeScript: Version"
		},
		"out/utils/versionProvider": {
			"couldNotLoadTsVersion": "Impossible de charger la version TypeScript dans ce chemin",
			"noBundledServerFound": "Le tsserver de VSCode a été supprimé par une autre application, par exemple, un outil de détection de virus mal configuré. Réinstallez VS Code."
		},
		"out/utils/versionPicker": {
			"useVSCodeVersionOption": "Utiliser la version de VS Code",
			"useWorkspaceVersionOption": "Utiliser la version de l'espace de travail",
			"learnMore": "En savoir plus",
			"selectTsVersion": "Sélectionner la version TypeScript utilisée pour les fonctionnalités de langage JavaScript et TypeScript"
		},
		"out/utils/typingsStatus": {
			"installingPackages": "Récupération (fetch) des données pour l'amélioration de TypeScript IntelliSense",
			"typesInstallerInitializationFailed.title": "Impossible d'installer des fichiers de typages pour les fonctionnalités de langage JavaScript. Vérifiez que NPM est installé ou configurez 'typescript.npm' dans vos paramètres utilisateur. Cliquer [ici]({0}) pour en savoir plus.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Ne plus afficher"
		},
		"out/utils/surveyor": {
			"survey.checkJs.prompt": "Aider à améliorer le support de VS Code pour [checkJs] (https://code.visualstudio.com/Docs/languages/javascript#_type-checking) en JavaScript ! Étant donné que vous avez utilisé cette fonctionnalité, envisageriez-vous de répondre à un court sondage sur votre expérience ?",
			"takeShortSurvey": "Répondre à une enquête rapide",
			"remindLater": "Me le rappeler plus tard",
			"neverAgain": "Désactiver les enquêtes JS/TS"
		},
		"out/utils/projectStatus": {
			"statusExclude": "TypeScript: Configure Excludes",
			"hintExclude": "Pour activer les fonctionnalités de langage JavaScript/TypeScript à l'échelle du projet, excluez les dossiers contenant de nombreux fichiers, par exemple : {0}",
			"hintExclude.generic": "Pour activer les fonctionnalités de langage JavaScript/TypeScript à l'échelle du projet, excluez les dossiers volumineux contenant des fichiers sources inutilisés.",
			"large.label": "Configurer les exclusions",
			"hintExclude.tooltip": "Pour activer les fonctionnalités de langage JavaScript/TypeScript à l'échelle du projet, excluez les dossiers volumineux contenant des fichiers sources inutilisés."
		},
		"out/utils/logger": {
			"channelName": "TypeScript"
		},
		"out/utils/api": {
			"invalidVersion": "La version n'est pas valide"
		},
		"out/features/updatePathsOnRename": {
			"renameProgress.title": "Recherche de mises à jour des importations JS/TS",
			"prompt": "Mettre à jour les importations pour le fichier déplacé : '{0}' ?",
			"reject.title": "Non",
			"accept.title": "Oui",
			"always.title": "Toujours mettre à jour automatiquement les importations",
			"never.title": "Ne jamais mettre à jour automatiquement les importations"
		},
		"out/features/task": {
			"buildTscLabel": "build - {0}",
			"buildAndWatchTscLabel": "watch - {0}"
		},
		"out/features/rename": {
			"fileRenameFail": "Une erreur s'est produite pendant le renommage du fichier"
		},
		"out/features/referencesCodeLens": {
			"oneReferenceLabel": "1 référence",
			"manyReferenceLabel": "{0} références"
		},
		"out/features/refactor": {
			"refactoringFailed": "Impossible d'appliquer la refactorisation"
		},
		"out/features/quickFix": {
			"fixAllInFileLabel": "{0} (Corriger tout dans le fichier)"
		},
		"out/features/organizeImports": {
			"organizeImportsAction.title": "Organiser les Imports"
		},
		"out/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Commentaire JSDoc"
		},
		"out/features/implementationsCodeLens": {
			"oneImplementationLabel": "1 implémentation",
			"manyImplementationLabel": "{0} implémentations"
		},
		"out/features/fixAll": {
			"autoFix.label": "Corriger automatiquement"
		},
		"out/features/directiveCommentCompletions": {
			"ts-check": "Active la vérification sémantique dans un fichier JavaScript. Doit se trouver au début d'un fichier.",
			"ts-nocheck": "Désactive la vérification sémantique dans un fichier JavaScript. Doit se trouver au début d'un fichier.",
			"ts-ignore": "Supprime les erreurs @ts-check sur la ligne suivante d'un fichier."
		},
		"out/features/completions": {
			"selectCodeAction": "Sélectionner l'action de code à appliquer",
			"acquiringTypingsLabel": "Acquisition des typings...",
			"acquiringTypingsDetail": "Acquisition des définitions typings pour IntelliSense.",
			"autoImportLabel": "Importation automatique depuis {0}"
		},
		"out/features/baseCodeLensProvider": {
			"referenceErrorLabel": "Impossible de déterminer les références"
		},
		"out/commands/goToProjectConfiguration": {
			"typescript.projectConfigNoWorkspace": "Ouvrez un dossier dans VS Code pour utiliser un projet TypeScript ou JavaScript",
			"typescript.projectConfigUnsupportedFile": "Impossible de déterminer le projet TypeScript ou JavaScript. Type de fichier non pris en charge",
			"typescript.projectConfigCouldNotGetInfo": "Impossible de déterminer le projet TypeScript ou JavaScript",
			"typescript.noTypeScriptProjectConfig": "Le fichier ne fait pas partie d'un projet TypeScript. Cliquer [ici]({0}) pour en savoir plus.",
			"typescript.noJavaScriptProjectConfig": "Le fichier ne fait pas partie d'un projet JavaScript. Cliquer [ici]({0}) pour en savoir plus.",
			"typescript.configureTsconfigQuickPick": "Configurer tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configurer jsconfig.json"
		},
		"out/typescriptServiceClient": {
			"noServerFound": "Le chemin {0} ne pointe pas vers une installation tsserver valide. Utilisation par défaut de la version TypeScript groupée.",
			"serverExitedWithError": "Le serveur de langage TypeScript a rencontré une erreur. Le message d'erreur est :  {0}",
			"typescript.openTsServerLog.notSupported": "La journalisation du serveur TS nécessite TS 2.2.2+",
			"typescript.openTsServerLog.loggingNotEnabled": "La journalisation du serveur TS est désactivée. Définissez 'typescript.tsserver.log' et redémarrez le serveur TS pour activer la journalisation",
			"typescript.openTsServerLog.enableAndReloadOption": "Activer la journalisation et redémarrer le serveur TS",
			"typescript.openTsServerLog.noLogFile": "Le serveur TS n'a pas démarré la journalisation.",
			"openTsServerLog.openFileFailedFailed": "Impossible d'ouvrir le fichier journal du serveur TS",
			"serverDiedAfterStart": "Le service de langage TypeScript s'est subitement arrêté 5 fois juste après avoir démarré. Il n'y aura pas d'autres redémarrages.",
			"serverDiedReportIssue": "Signaler un problème",
			"serverDied": "Le service de langage TypeScript s'est subitement arrêté 5 fois au cours des 5 dernières minutes.",
			"serverLoading.progress": "Initialisation des fonctionnalités de langage JS/TS"
		}
	}
}