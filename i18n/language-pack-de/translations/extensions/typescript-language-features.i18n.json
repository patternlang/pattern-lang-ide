{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "TypeScript- und JavaScript-Sprachfeatures",
			"description": "Bietet umfangreiche Sprachunterstützung für JavaScript und TypeScript.",
			"reloadProjects.title": "Projekt erneut laden",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Vervollständigen Sie Funktionen mit deren Parametersignatur.",
			"typescript.tsdk.desc": "Gibt den Ordnerpfad mit den zu verwendenden tsserver- und lib*.d.ts-Dateien an.",
			"typescript.disableAutomaticTypeAcquisition": "Deaktiviert die automatische Typerfassung. Die automatische Typerfassung ruft @type-Pakete von npm ab, um IntelliSense für externe Bibliotheken zu verbessern.",
			"typescript.tsserver.log": "Aktiviert die Protokollierung des TS-Servers in eine Datei. Mithilfe der Protokolldatei lassen sich Probleme beim TS-Server diagnostizieren. Die Protokolldatei kann Dateipfade, Quellcode und weitere potenziell sensible Informationen aus Ihrem Projekt enthalten.",
			"typescript.tsserver.pluginPaths": "Zusätzliche Pfade zum Ermitteln von Typescript Language Service-Plug-Ins. Im Arbeitsbereich muss TypeScript 2.3.0 oder höher verwendet werden.",
			"typescript.tsserver.pluginPaths.item": "Ein absoluter oder relativer Pfad. Ein relativer Pfad wird in Bezug auf die Arbeitsbereichsordner aufgelöst.",
			"typescript.tsserver.trace": "Aktiviert die Ablaufverfolgung von an den TS-Server gesendeten Nachrichten. Mithilfe der Ablaufverfolgung lassen sich Probleme beim TS-Server diagnostizieren. Die Ablaufverfolgung kann Dateipfade, Quellcode und weitere potenziell sensible Informationen aus Ihrem Projekt enthalten.",
			"typescript.validate.enable": "TypeScript-Überprüfung aktivieren/deaktivieren.",
			"typescript.format.enable": "Standardmäßigen TypeScript-Formatierer aktivieren/deaktivieren.",
			"javascript.format.enable": "Standardmäßigen JavaScript-Formatierer aktivieren/deaktivieren.",
			"format.insertSpaceAfterCommaDelimiter": "Definiert die Verarbeitung von Leerzeichen nach einem Kommatrennzeichen.",
			"format.insertSpaceAfterConstructor": "Definiert die Verarbeitung von Leerzeichen nach dem Schlüsselwort \"constructor\". Im Arbeitsbereich muss TypeScript 2.3.0 oder höher verwendet werden.",
			"format.insertSpaceAfterSemicolonInForStatements": "Definiert die Verarbeitung von Leerzeichen nach einem Semikolon in einer for-Anweisung.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Definiert die Verarbeitung von Leerzeichen nach einem binären Operator.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Definiert die Verarbeitung von Leerzeichen nach Schlüsselwörtern in einer Flusssteuerungsanweisung.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Definiert die Verarbeitung von Leerzeichen nach einem Funktionsschlüsselwort für anonyme Funktionen.",
			"format.insertSpaceBeforeFunctionParenthesis": "Definiert die Verarbeitung von Leerzeichen vor Funktionsargumentklammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren runden Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren eckigen Klammern.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden nicht leeren geschweiften Klammern. Im Arbeitsbereich muss TypeScript 2.3.0 oder höher verwendet werden.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden geschweiften Klammern für Vorlagenzeichenfolgen.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Definiert die Verarbeitung von Leerzeichen nach öffnenden und vor schließenden geschweiften Klammern für JSX-Ausdrücke.",
			"format.insertSpaceAfterTypeAssertion": "Definiert die Verarbeitung von Leerzeichen nach Typassertionen in TypeScript. Im Arbeitsbereich muss TypeScript 2.3.0 oder höher verwendet werden.",
			"format.placeOpenBraceOnNewLineForFunctions": "Definiert, ob eine öffnende geschweifte Klammer für Funktionen in eine neue Zeile eingefügt wird.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Definiert, ob eine öffnende geschweifte Klammer für Kontrollblöcke in eine neue Zeile eingefügt wird.",
			"javascript.validate.enable": "JavaScript-Überprüfung aktivieren/deaktivieren.",
			"goToProjectConfig.title": "Zur Projektkonfiguration wechseln",
			"javascript.referencesCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Verweise in JavaScript Dateien. Erfordert TypeScript 2.0.6 oder höher.",
			"typescript.referencesCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Verweise in TypeScript-Dateien.",
			"typescript.implementationsCodeLens.enabled": "Aktiviert oder deaktiviert CodeLens-Implementierungen. Dieses CodeLens-Element zeigt an, wer eine Schnittstelle implementiert hat.",
			"typescript.openTsServerLog.title": "TS Server-Protokolldatei öffnen",
			"typescript.restartTsServer": "TS Server neu starten",
			"typescript.selectTypeScriptVersion.title": "TypeScript-Version auswählen ...",
			"typescript.reportStyleChecksAsWarnings": "Stilüberprüfungen als Warnungen melden.",
			"javascript.implicitProjectConfig.checkJs": "Aktiviert/deaktiviert die Semantikprüfung bei JavaScript-Dateien. Diese Einstellung wird von vorhandenen Dateien \"jsconfig.json\" oder \"tsconfig.json\" außer Kraft gesetzt. Im Arbeitsbereich muss TypeScript 2.3.1 oder höher verwendet werden.",
			"typescript.npm": "Gibt den Pfad zu ausführbaren NPM-Datei an, die für die automatische Typerfassung verwendet wird. Im Arbeitsbereich muss TypeScript 2.3.4 oder höher verwendet werden.",
			"typescript.check.npmIsInstalled": "Überprüfen Sie, ob NPM für die automatische Typerfassung installiert ist.",
			"configuration.suggest.names": "Das Einfügen eindeutiger Namen aus der Datei in den JavaScript-Vorschlägen aktivieren bzw. deaktivieren.",
			"typescript.tsc.autoDetect": "Legt fest, ob tsc-Tasks automatisch erkannt werden.",
			"typescript.tsc.autoDetect.off": "Dieses Feature deaktivieren.",
			"typescript.tsc.autoDetect.on": "Build- und Überwachungstasks erstellen",
			"typescript.tsc.autoDetect.build": "Nur Tasks mit einmaliger Kompilierung erstellen.",
			"typescript.tsc.autoDetect.watch": "Nur Kompilierungs- und Überwachungstasks erstellen.",
			"typescript.problemMatchers.tsc.label": "TypeScript-Probleme",
			"typescript.problemMatchers.tscWatch.label": "TypeScript-Probleme (Überwachungsmodus)",
			"configuration.suggest.paths": "Vorschläge für Pfade in Importanweisungen und require-Aufrufen aktivieren bzw. deaktivieren.",
			"typescript.locale": "Legt das zum Melden von JavaScript- und TypeScript-Fehlern verwendete Gebietsschema fest. Im Arbeitsbereich muss TypeScript 2.6.0 oder höher verwendet werden. Beim Standardwert `null` wird das Gebietsschema von VS Code verwendet.",
			"javascript.implicitProjectConfig.experimentalDecorators": "`experimentalDecorators` für JavaScript-Dateien aktivieren oder deaktivieren, die nicht Teil eines Projekts sind. Falls die Datei \"jsconfig.json\" oder \"tsconfig.json\" vorhanden ist, setzt sie diese Einstellung außer Kraft. Im Arbeitsbereich muss TypeScript 2.3.1 oder höher verwendet werden.",
			"configuration.suggest.autoImports": "Aktiviert oder deaktiviert Vorschläge für den automatischen Import. Im Arbeitsbereich muss TypeScript 2.6.1 oder höher verwendet werden.",
			"taskDefinition.tsconfig.description": "Die \"tsconfig\"-Datei, die den TS-Build definiert.",
			"javascript.suggestionActions.enabled": "Aktiviert oder deaktiviert Vorschlagsdiagnosen für JavaScript-Dateien im Editor. Im Arbeitsbereich muss TypeScript 2.8 oder höher verwendet werden.",
			"typescript.suggestionActions.enabled": "Aktiviert oder deaktiviert Vorschlagsdiagnosen für TypeScript-Dateien im Editor. Im Arbeitsbereich muss TypeScript 2.8 oder höher verwendet werden.",
			"typescript.preferences.quoteStyle": "Der bevorzugte Stil für Anführungszeichen bei schnellen Fixes. Mögliche Werte sind `single` (einfache Anführungszeichen), `double` (doppelte Anführungszeichen) und `auto` (hierbei wird der Stil für Anführungszeichen aus bestehenden Importen abgeleitet). Im Arbeitsbereich muss TypeScript 2.9 oder höher verwendet werden.",
			"typescript.preferences.importModuleSpecifier": "Bevorzugter Pfadstil für automatische Importe.",
			"typescript.preferences.importModuleSpecifier.auto": "Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.",
			"typescript.preferences.importModuleSpecifier.relative": "Relativ zum Dateispeicherort.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Auf Grundlage der `baseUrl`, die in der Datei `jsconfig.json` oder `jtsconfig.json` konfiguriert ist.",
			"typescript.updateImportsOnFileMove.enabled": "Automatisches Aktualisieren von Importpfaden beim Umbenennen oder Verschieben einer Datei in VS Code aktivieren oder deaktivieren. Im Arbeitsbereich muss TypeScript 2.9 oder höher verwendet werden.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Bei jeder Umbenennung auffordern.",
			"typescript.updateImportsOnFileMove.enabled.always": "Pfade immer automatisch aktualisieren lassen.",
			"typescript.updateImportsOnFileMove.enabled.never": "Pfade nie umbenennen und keine Aufforderung anzeigen.",
			"typescript.autoClosingTags": "Automatisches Schließen von JSX-Tags aktivieren oder deaktivieren. Im Arbeitsbereich muss TypeScript 3.0 oder höher verwendet werden.",
			"typescript.suggest.enabled": "Vorschläge für die automatische Vervollständigung aktivieren bzw. deaktivieren.",
			"configuration.surveys.enabled": "Gelegentliche Umfragen zur Verbesserung der Unterstützung von JavaScript und TypeScript in Visual Studio Code aktivieren bzw. deaktivieren.",
			"configuration.suggest.completeJSDocs": "Vorschläge zum Vervollständigen von JSDoc-Kommentaren aktivieren/deaktivieren.",
			"typescript.preferences.renameShorthandProperties": "Einführung von Aliasen für Kompakteigenschaften von Objekten während einer Umbenennung aktivieren/deaktivieren. Hierfür muss im Arbeitsbereich TypeScript 3.4 oder höher verwendet werden."
		},
		"out/utils/versionStatus": {
			"typescriptVersion": "TypeScript: Version"
		},
		"out/utils/versionProvider": {
			"couldNotLoadTsVersion": "Die TypeScript-Version konnte unter diesem Pfad nicht geladen werden.",
			"noBundledServerFound": "Der tsserver von VS Code wurde von einer anderen Anwendung wie etwa einem fehlerhaften Tool zur Viruserkennung gelöscht. Führen Sie eine Neuinstallation von VS Code durch."
		},
		"out/utils/versionPicker": {
			"useVSCodeVersionOption": "Version von VS Code verwenden",
			"useWorkspaceVersionOption": "Arbeitsbereichsversion verwenden",
			"learnMore": "Weitere Informationen",
			"selectTsVersion": "Wählen Sie die für die JavaScript- und TypeScript-Sprachfunktionen verwendete TypeScript-Version aus."
		},
		"out/utils/typingsStatus": {
			"installingPackages": "Daten werden zum Optimieren von TypeScript IntelliSense abgerufen",
			"typesInstallerInitializationFailed.title": "Typisierungsdateien für JavaScript-Sprachfunktionen konnten nicht installiert werden. Stellen Sie sicher, das NPM installiert ist, oder konfigurieren Sie \"typescript.npm\" in Ihren Benutzereinstellungen. Klicken Sie [hier]({0}), um mehr zu erfahren.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Nicht mehr anzeigen"
		},
		"out/utils/surveyor": {
			"survey.checkJs.prompt": "Helfen Sie uns dabei, die Unterstützung von [checkJs](https://code.visualstudio.com/Docs/languages/javascript#_type-checking) in JavaScript durch Visual Studio Code zu verbessern. Sie verwenden dieses Feature. Möchten Sie an einer kurzen Umfrage zu Ihren Erfahrungen mit dem Feature teilnehmen?",
			"takeShortSurvey": "An kurzer Umfrage teilnehmen",
			"remindLater": "Später erinnern",
			"neverAgain": "Umfragen zu JavaScript bzw. TypeScript deaktivieren"
		},
		"out/utils/projectStatus": {
			"statusExclude": "TypeScript: Configure Excludes",
			"hintExclude": "Um die JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie Ordner mit vielen Dateien aus. Beispiel: {0}",
			"hintExclude.generic": "Um JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie große Ordner mit Quelldateien aus, an denen Sie nicht arbeiten.",
			"large.label": "Auszuschließende Elemente konfigurieren",
			"hintExclude.tooltip": "Um JavaScript/TypeScript-Sprachfunktionen für das gesamte Projekt zu aktivieren, schließen Sie große Ordner mit Quelldateien aus, an denen Sie nicht arbeiten."
		},
		"out/utils/logger": {
			"channelName": "TypeScript"
		},
		"out/utils/api": {
			"invalidVersion": "Ungültige Version"
		},
		"out/features/updatePathsOnRename": {
			"renameProgress.title": "Es werden Updates für JS-/TS-Importe gesucht",
			"prompt": "Sollen die Importe für die verschobene Datei \"{0}\" aktualisiert werden?",
			"reject.title": "Nein",
			"accept.title": "Ja",
			"always.title": "Importe immer automatisch aktualisieren",
			"never.title": "Importe nie automatisch aktualisieren"
		},
		"out/features/task": {
			"buildTscLabel": "Erstellen – {0}",
			"buildAndWatchTscLabel": "Überwachen – {0}"
		},
		"out/features/rename": {
			"fileRenameFail": "Beim Umbenennen der Datei ist ein Fehler aufgetreten."
		},
		"out/features/referencesCodeLens": {
			"oneReferenceLabel": "1 Verweis",
			"manyReferenceLabel": "{0} Verweise"
		},
		"out/features/refactor": {
			"refactoringFailed": "Umgestaltung nicht möglich"
		},
		"out/features/quickFix": {
			"fixAllInFileLabel": "{0} (Behebe alle in Datei)"
		},
		"out/features/organizeImports": {
			"organizeImportsAction.title": "Importe organisieren"
		},
		"out/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "JSDoc-Kommentar"
		},
		"out/features/implementationsCodeLens": {
			"oneImplementationLabel": "1 Implementierung",
			"manyImplementationLabel": "{0}-Implementierungen"
		},
		"out/features/fixAll": {
			"autoFix.label": "Automatisch korrigieren"
		},
		"out/features/directiveCommentCompletions": {
			"ts-check": "Aktiviert die Semantiküberprüfung in einer JavaScript-Datei. Muss sich oben in einer Datei befinden.",
			"ts-nocheck": "Deaktiviert die Semantiküberprüfung in einer JavaScript-Datei. Muss sich oben in einer Datei befinden.",
			"ts-ignore": "Unterdrückt @ts-check-Fehler in der nächsten Zeile einer Datei."
		},
		"out/features/completions": {
			"selectCodeAction": "Anzuwendende Codeaktion auswählen",
			"acquiringTypingsLabel": "Eingaben werden abgerufen...",
			"acquiringTypingsDetail": "Eingabedefinitionen für IntelliSense werden abgerufen.",
			"autoImportLabel": "Aus \"{0}\" automatisch importieren"
		},
		"out/features/baseCodeLensProvider": {
			"referenceErrorLabel": "Verweise konnten nicht bestimmt werden"
		},
		"out/commands/goToProjectConfiguration": {
			"typescript.projectConfigNoWorkspace": "Öffnen Sie einen Ordner in VS Code, um ein TypeScript- oder JavaScript-Projekt zu verwenden.",
			"typescript.projectConfigUnsupportedFile": "TypeScript- oder JavaScript-Projekt konnte nicht ermittelt werden. Nicht unterstützter Dateityp.",
			"typescript.projectConfigCouldNotGetInfo": "TypeScript- oder JavaScript-Projekt konnte nicht ermittelt werden.",
			"typescript.noTypeScriptProjectConfig": "Datei ist nicht Teil eines TypeScript-Projekt. Klicken Sie [hier]({0}), um mehr zu erfahren.",
			"typescript.noJavaScriptProjectConfig": "Datei ist nicht Teil eines JavaScript-Projekt. Klicken Sie [hier]({0}), um mehr zu erfahren.",
			"typescript.configureTsconfigQuickPick": "tsconfig.json konfigurieren",
			"typescript.configureJsconfigQuickPick": "jsconfig.json konfigurieren"
		},
		"out/typescriptServiceClient": {
			"noServerFound": "Der Pfad \"{0}\" zeigt nicht auf eine gültige tsserver-Installation. Fallback auf gebündelte TypeScript-Version wird durchgeführt.",
			"serverExitedWithError": "Der TypeScript-Sprachserver wurde durch einen Fehler beendet. Fehlermeldung: {0}",
			"typescript.openTsServerLog.notSupported": "Die TS Server-Protokollierung erfordert TS 2.2.2+.",
			"typescript.openTsServerLog.loggingNotEnabled": "Die TS Server-Protokollierung ist deaktiviert. Legen Sie \"typescript.tsserver.log\" fest, und laden Sie VS Code erneut, um die Protokollierung zu aktivieren.",
			"typescript.openTsServerLog.enableAndReloadOption": "Aktiviert die Protokollierung und startet den TS-Server neu.",
			"typescript.openTsServerLog.noLogFile": "TS Server hat noch nicht mit der Protokollierung begonnen.",
			"openTsServerLog.openFileFailedFailed": "Die TS-Server-Protokolldatei konnte nicht geöffnet werden.",
			"serverDiedAfterStart": "Der TypeScript-Sprachdienst wurde direkt nach seinem Start fünfmal beendet. Der Dienst wird nicht neu gestartet.",
			"serverDiedReportIssue": "Problem melden",
			"serverDied": "Der TypeScript-Sprachdienst wurde während der letzten fünf Minuten fünfmal unerwartet beendet.",
			"serverLoading.progress": "Sprachfeatures von JavaScript bzw. TypeScript werden initialisiert"
		}
	}
}